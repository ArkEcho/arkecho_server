
@inject ILocalStorage localStorage
@inject AppEnvironment environment
@inject Rest rest

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Rounded.Cast" Class="mr-3 mb-n1" />
            ChangeServerAddress
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField Variant="Variant.Text" @bind-Value=serverAddress Immediate=true Label="Server Address" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Success" OnClick="Save">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    private string serverAddress = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        serverAddress = await localStorage.GetStringAsync(Resources.SERVERADDRESSSETTING);
        if (string.IsNullOrEmpty(serverAddress))
            serverAddress = $"http://localhost:{Resources.ARKECHOPORT}";
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void Save()
    {
        environment.ServerAddress = serverAddress;
        localStorage.SetStringAsync(Resources.SERVERADDRESSSETTING, serverAddress);
        rest.Connect();
        MudDialog.Close();
    }
}
